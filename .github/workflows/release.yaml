name: Multi-Arch Nix Release

on:
  workflow_dispatch:

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      semver: ${{ steps.semver.outputs.semver }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Extract version from Cargo.toml
        id: extract
        run: |
          version=$(awk -F' *= *' '/^version *=/ {gsub(/"/, "", $2); print $2; exit}' Cargo.toml)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Calculate semantic version
        id: semver
        uses: ck3mp3r/actions/semver-version@fix/semver-action
        with:
          current-version: ${{ steps.extract.outputs.version }}
          detect-branch-builds: "false"

  build:
    needs: get-version
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            nix_system: x86_64-linux
          - os: ubuntu-latest
            nix_system: aarch64-linux
          - os: macos-14
            nix_system: aarch64-darwin
          - os: macos-13
            nix_system: x86_64-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v10

      - name: Build for ${{ matrix.nix_system }}
        run: nix build .#${{ matrix.nix_system }}

      - name: Rename build outputs for uniqueness
        run: |
          mv result/nu-mcp.tgz result/nu-mcp-${{ needs.get-version.outputs.semver }}-${{ matrix.nix_system }}.tgz
          mv result/nu-mcp.sha256 result/nu-mcp-${{ needs.get-version.outputs.semver }}-${{ matrix.nix_system }}.sha256
          mv result/nu-mcp-nix.sha256 result/nu-mcp-${{ needs.get-version.outputs.semver }}-${{ matrix.nix_system }}-nix.sha256

      - name: Upload build outputs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nu-mcp-assets-${{ matrix.nix_system }}
          path: |
            result/nu-mcp-${{ needs.get-version.outputs.semver }}-${{ matrix.nix_system }}.tgz
            result/nu-mcp-${{ needs.get-version.outputs.semver }}-${{ matrix.nix_system }}.sha256
            result/nu-mcp-${{ needs.get-version.outputs.semver }}-${{ matrix.nix_system }}-nix.sha256

  release:
    needs: [get-version, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.get-version.outputs.semver }}
          name: "Release v${{ needs.get-version.outputs.semver }}"
          draft: false
          prerelease: false

      - name: Upload build outputs to Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**/*.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
